#include "classes.h"

void Board::cmpMove(){
    std::random_device rd;                           // uses entropy
    std::default_random_engine generator(rd());   //generates a uniformly distributed number
    std::uniform_int_distribution<int> distribution(0,2); // transform sequences of numbers generated by a generator into sequences of numbers that follow a specific random variable distribution
    int row = distribution(generator);  // generates number in the range 1..6 
    int column = distribution(generator);
    while(arr[row][column] != " "){
    row = distribution(generator);  // generates number in the range 1..6 
    column = distribution(generator);
    }
    arr[row][column] = "X";
    print_board();
}

int Board::checkWin(std::string s){
    for(int i = 0; i < 3; i++){
        if(arr[i][0] == s && arr[i][1] == s && arr[i][2] == s){
            system("clear");
            print_board();
            return 1;
        }
    }
    //checked every row.
    for(int i = 0; i < 3; i++){
        if(arr[0][i] == s && arr[1][i] == s && arr[2][i] == s){
            system("clear");
            print_board();
            return 1;
        }
    }
    //checked every column.

    if((arr[0][0] == s && arr[1][1] == s && arr[2][2] == s) || (arr[0][2] == s && arr[1][1] == s && arr[2][0] == s)){
            system("clear");
            print_board();
            return 1;
    }
    else{
        return 0;
    }
}

void Board::perMove(){
    std::string answer;
    std::cout << "Please enter your choice:" << std::endl;
    std::cin >> answer;
    int good = 0;
    int column;
    int row;
    while(good == 0){
    if(answer == "h"){
        system("clear");
        std::cout << "Here are the instructions:" << std::endl;
        std::cout << std::endl;

        std::cout << "One char signifies the middle (m), top (t), or bottom (b) row." << std::endl; 
        std::cout << "The other char signifies the middle (m), left(l), or right(r), DO NOT WORRY ABOUT ORDER OF CHARS." << std::endl;
        std::cout << std::endl;

        print_board();
        std::cout << "Please enter your selection now: " << std::endl;
        std::cin >> answer;
        continue;
    }
    if(answer == "q"){
        exit(1);
    }
    if(answer.length() != 2){
        std::cout<< "Incorrect length, retry:" << std::endl;
        std::cin >> answer;
        continue;
    }
    else if(answer != "mm" && answer != "mb" && answer != "mt" &&  
            answer != "lt" && answer != "lm" && answer != "lb" && 
            answer != "rm" && answer != "rt" && answer != "rb")
    {
                
        std::reverse(answer.begin(), answer.end()); 

        if(answer != "mm" && answer != "mb" && answer != "mt" &&  
            answer != "lt" && answer != "lm" && answer != "lb" && 
            answer != "rm" && answer != "rt" && answer != "rb"){
            print_board();
            std::cout << "Impossible selection, try one of these: lt, lm, lb, mt, mm, mb, rt, rm, rb.:" << std::endl;
            std::cin >> answer;
            continue;
        }   
    }
    
    switch (answer[0]) {
  case 'm':
    column = 1;
    break;
  case 'l':
    column = 0;
    break;
  case 'r':
    column = 2;
    break;
  default:
    continue;
}
    switch (answer[1]) {
  case 't':
    row = 0;
    break;
  case 'm':
    row = 1;
    break;
  case 'b':
    row = 2;
    break;
  default:
    continue;
}

if(arr[row][column] != " "){
    std::cout << " Taken Selection, try one of these: lt, lm, lb, mt, mm, mb, rt, rm, rb.:" << std::endl;
    std::cin >> answer;
    continue;
}
else{
    good = 1;
    arr[row][column] = "O";
    continue;
}   
    
    }
return;
}

void Board::print_board(){
    for(int i = 0; i<3; i++){
        for(int j = 0; j<3; j++){
            if(j==1){
                std::cout << "| " << arr[i][j] << " |";
            }
            else{
                std::cout << " " << arr[i][j] << " ";
            }
        }
            if(i!=2){
                std::cout << std::endl;
                for(int j = 0; j< 11; j++){
                    if(j == 3 || j ==7 ){
                        std::cout << "|";
                    }
                    else{
                        std::cout<< "-";
                    }
                }
                
            }
            std::cout << std::endl;
    }
}
